#include<iostream>
#include<queue>
#include <string>
#include <algorithm>

using namespace std;
deque <int> q;
deque <int> q2;


int main()
{
	std::ios_base::sync_with_stdio(false);
	std::cin.tie(NULL);
	std::cout.tie(NULL);
	
	int n, m, a;
	int count = 0;
	cin >> n >> m;
	for (int i = 1; i <= n; i++)
	{
		q.push_back(i);
	}
	for (int i = 0; i < m; i++)
	{
		cin >> a;
		q2.push_back(a);
	}
	for (int i = 0; i < m; i++)
	{
		auto result = find(q.begin(), q.end(), q2[i]);
		if (q.front() == q2[i])
		{
			q.pop_front();
			continue;
		}
		if (result - q.begin() > q.size() / 2)
		{
			while (q.front() != q2[i])
			{
				q.push_front(q.back());
				q.pop_back();
				count++;
			}
			q.pop_front();
		}
		else
		{
			while (q.front() != q2[i])
			{
				q.push_back(q.front());
				q.pop_front();
				count++;
			}
			q.pop_front();
		}
	}
	cout << count;
}
