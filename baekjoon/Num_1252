#include <iostream>
#include <string>
#include <algorithm>
#include <stack>
using namespace std;
stack<char> carry;
string answer;
void bin(char a, char b)
{
    if(a=='0' && b=='0')
    {
        if(carry.top()=='1')
        {
            answer.insert(answer.begin(),'1');
            carry.pop();
        }
        else
        {
            answer.insert(answer.begin(),'0');
        }
        

    }
    else if((a=='1' && b=='0')||(a=='0' && b=='1'))
    {
        if(carry.top()=='1')
        {
           answer.insert(answer.begin(),'0'); 
           
        }
        else
        {
            answer.insert(answer.begin(),'1');
        }
        
    }
    else
    {
        if(carry.top()=='1')
        {
            answer.insert(answer.begin(),'1');
            carry.pop();
            carry.push('1');
        }
        else
        {
            answer.insert(answer.begin(),'0');
            carry.push('1');
        }
        
    }
    
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    string a,b;
    string tmp;
    int cnt=0;
    cin >> a >> b;
    // cout << a << " " << b << "\n";
    for(int i = 0; i < a.size(); i++)
    {
        if(a[i]=='0')
        {
            cnt++;
        }
        else break;
    }
    a.erase(0,cnt);
    cnt=0;
    for(int i = 0; i < b.size(); i++)
    {
        if(b[i]=='0')
        {
            cnt++;
        }
        else break;
    }

    b.erase(0,cnt);
    // idx 0부터 cnt 만큼의 길이를 지움.
    reverse(a.begin(),a.end());
    reverse(b.begin(),b.end());

    if(a.size()<b.size())
    {
        a.swap(b);
    } // a가 무조건 길게
    carry.push('0');
    for(int i=0; i< a.size(); i++)
    {
        if(i<b.size())
        {
            bin(a[i],b[i]);
        }
        else
        {
            if(a[i]=='1')
            {
                if(carry.top()=='1')
                {
                    answer.insert(answer.begin(),'0');

                }
                else
                {
                    answer.insert(answer.begin(),'1');
                }
                
            }
            else
            {
                if(carry.top()=='1')
                {
                    answer.insert(answer.begin(),'1');
                    carry.pop();
                }
                else
                {
                    answer.insert(answer.begin(),'0');
                }
                
            }
            
        }
    }
    if(!carry.empty())
    {
        if(carry.top()=='1') answer.insert(answer.begin(),'1');
        carry.pop();
    }
    if(answer.empty())
    {
        cout<<'0';
    }
    else cout << answer;
    return 0;
}
